function [hitlistWIDs] = findCmpdID(hitlist,keyFname)
%[hitlistWIDs] = findCmpdID(hitlist,keyFname)
%   this function will take in a hitlist generated by hitDataBrowser.m that
%   contains the compound IDs (in quadrant/well form), SSMDs, BHS, numObs,
%   etc. and try to find the actual compound identity using the compound ID
%   as the keyFname file that links the compound ID # to another number in
%   the bioactive screening library. For example: the hitlist may contain a
%   hit for a compound in plate 5052SBQ3 well A-5, this function will find
%   the true identity of the compound as "Maprotiline," for example. The
%   output is hitlistWIDs, which is the original hit list file, but with an
%   additional column at the end that represents the compound identity

%Note: anything labeled "key" refers to the KEY file that contains the
%compound identity (e.g. maprotiline). Anything labeled "hit" refers to the
%hitlist file that contains hits (e.g. plate 5052SBQ3 well D-5).
[key_num,key_txt,~] = xlsread(keyFname);
key_headers = key_txt(1,[2 3 4 6]);
quadrant = key_num;
key_minushdr = key_txt(2:end,[2 3 4 6]);
key_minushdr(:,2) = num2cell(quadrant);

%There are three things that we need to match: the plate, the quadrant, and
%finally the well. So from they key and hitlist files we need to extract
%out this information. The first step is to get these two disparate
%datasets into a standard that agrees with each other. Let's use the
%standard that plates are referred to as "5052", quadrants as "2", wells as
%"C09" and the compound identity will remain as it currently is.

%Let's begin by formatting the key data. Only the plate information needs
%be changed from "05052SKB-IN01" to our standardized format.
key_standardized = cell(size(key_minushdr));
key_standardized(:,2:end) = key_minushdr(:,2:end);
for i = 1:size(key_minushdr,1)
    temp = key_minushdr{i,1}; %This is the current plate name which we will fix
    temp(1) = []; %Delete the leading zero
    del_idx = findstr(temp, 'SKB')-1; %We want to remove everything following "SKB"
    key_standardized{i,1} = temp(1:del_idx); %Now save the standardized name!
end

%Next, we need to standardize the hitlist file as well. 
%To do this we need to put it in the standardized format of Plate,
%Quadrant, Well, [Compound identity]. All this information is contained
%within the FIRST column of hitlist, we just need to tease it out
hit_standardized = cell(size(hitlist,1),size(key_minushdr,2));
for i = 1:size(hit_standardized,1)
    temp = hitlist{i,1};
    plate = temp(1:4); %First four are the plate, now we have to find the quadrant
    quad_idx = findstr(temp,'Q')+1; %We want to ignore the "Q" itself!
    quadrant = str2num(temp(quad_idx));
    well_idx = findstr(temp,'-')+1; %Again, we wish to ignore the '-'
    wellname = temp(well_idx:end); %Problem here is that the well has both a letter and a number, and the number must be in "02" format if <10
    separator_idx = findstr(wellname,'_')+1;
    wellnum = str2num(wellname(separator_idx:end));
    if wellnum < 10
        wellnum_str = ['0' num2str(wellnum)];
    else
        wellnum_str = num2str(wellnum);
    end
    wellname_standardized = [wellname(1) wellnum_str];
    hit_standardized(i,:) = {plate quadrant, wellname_standardized, []};
end

%Great! Now everything is standardized. The next step is to start finding
%where the hits are in the general database and assigning it a SelekChem ID
%To do this, we will iterate through the entire hit list, search by plate,
%then by quadrant, and finally by well to locate its identity.
for i = 1:size(hit_standardized,1)
    temp = hit_standardized(i,:);
    %First we look only for the appropriate plate
    plate_idx = strcmp(key_standardized(:,1),temp(1));
    plate_cutout = key_standardized(plate_idx,:); %Trim the data to contain only those that belong to the plate in question
    quad_idx = strcmp(plate_cutout(:,2),temp(2));
    quad_cutout = plate_cutout(cell2mat(plate_cutout(:,2)) == cell2mat(temp(2)),:); %Trim to only the quadrant
    well_idx = strcmp(quad_cutout(:,3),temp(3)); %Find the location of the well
    hit_standardized(i,end) = quad_cutout(well_idx,end); %We found the compound! Now slap it into the hitlist!
end
hitlistWIDs = [hitlist hit_standardized(:,end)];
